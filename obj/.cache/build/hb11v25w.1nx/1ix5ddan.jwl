<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class FN
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class FN
   ">
    <meta name="generator" content="docfx 2.56.5.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="FigNet.Core.FN">
  
  
  <h1 id="FigNet_Core_FN" data-uid="FigNet.Core.FN" class="text-break">Class FN
  </h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">FN</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="FigNet.Core.html">FigNet.Core</a></h6>
  <h6><strong>Assembly</strong>: FigNet.dll</h6>
  <h5 id="FigNet_Core_FN_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class FN</code></pre>
  </div>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="FigNet_Core_FN_Connections_" data-uid="FigNet.Core.FN.Connections*"></a>
  <h4 id="FigNet_Core_FN_Connections" data-uid="FigNet.Core.FN.Connections">Connections</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;IClientSocket&gt; Connections { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.List</span>&lt;<a class="xref" href="FigNet.Core.IClientSocket.html">IClientSocket</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_HandlerCollection_" data-uid="FigNet.Core.FN.HandlerCollection*"></a>
  <h4 id="FigNet_Core_FN_HandlerCollection" data-uid="FigNet.Core.FN.HandlerCollection">HandlerCollection</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static HandlerCollection HandlerCollection { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.HandlerCollection.html">HandlerCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_IsInitialized_" data-uid="FigNet.Core.FN.IsInitialized*"></a>
  <h4 id="FigNet_Core_FN_IsInitialized" data-uid="FigNet.Core.FN.IsInitialized">IsInitialized</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsInitialized { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_Logger_" data-uid="FigNet.Core.FN.Logger*"></a>
  <h4 id="FigNet_Core_FN_Logger" data-uid="FigNet.Core.FN.Logger">Logger</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static ILogger Logger { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.ILogger.html">ILogger</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_PeerCollection_" data-uid="FigNet.Core.FN.PeerCollection*"></a>
  <h4 id="FigNet_Core_FN_PeerCollection" data-uid="FigNet.Core.FN.PeerCollection">PeerCollection</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static PeerCollection PeerCollection { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.PeerCollection.html">PeerCollection</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_PeerFactory_" data-uid="FigNet.Core.FN.PeerFactory*"></a>
  <h4 id="FigNet_Core_FN_PeerFactory" data-uid="FigNet.Core.FN.PeerFactory">PeerFactory</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IPeerFactory PeerFactory { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.IPeerFactory.html">IPeerFactory</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_Serializer_" data-uid="FigNet.Core.FN.Serializer*"></a>
  <h4 id="FigNet_Core_FN_Serializer" data-uid="FigNet.Core.FN.Serializer">Serializer</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static ISerializer Serializer { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.ISerializer.html">ISerializer</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_Server_" data-uid="FigNet.Core.FN.Server*"></a>
  <h4 id="FigNet_Core_FN_Server" data-uid="FigNet.Core.FN.Server">Server</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IServerSocket Server { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.IServerSocket.html">IServerSocket</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_Settings_" data-uid="FigNet.Core.FN.Settings*"></a>
  <h4 id="FigNet_Core_FN_Settings" data-uid="FigNet.Core.FN.Settings">Settings</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Configuration Settings { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Configuration.html">Configuration</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="FigNet_Core_FN_AddConnectionAndConnect_" data-uid="FigNet.Core.FN.AddConnectionAndConnect*"></a>
  <h4 id="FigNet_Core_FN_AddConnectionAndConnect_FigNet_PeerConfig_" data-uid="FigNet.Core.FN.AddConnectionAndConnect(FigNet.PeerConfig)">AddConnectionAndConnect(PeerConfig)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void AddConnectionAndConnect(PeerConfig peerConfig)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.PeerConfig.html">PeerConfig</a></td>
        <td><span class="parametername">peerConfig</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_Deinitialize_" data-uid="FigNet.Core.FN.Deinitialize*"></a>
  <h4 id="FigNet_Core_FN_Deinitialize" data-uid="FigNet.Core.FN.Deinitialize">Deinitialize()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Deinitialize()</code></pre>
  </div>
  
  
  <a id="FigNet_Core_FN_Initilize_" data-uid="FigNet.Core.FN.Initilize*"></a>
  <h4 id="FigNet_Core_FN_Initilize" data-uid="FigNet.Core.FN.Initilize">Initilize()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Initilize()</code></pre>
  </div>
  
  
  <a id="FigNet_Core_FN_Initilize_" data-uid="FigNet.Core.FN.Initilize*"></a>
  <h4 id="FigNet_Core_FN_Initilize_FigNet_Configuration_" data-uid="FigNet.Core.FN.Initilize(FigNet.Configuration)">Initilize(Configuration)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void Initilize(Configuration config)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Configuration.html">Configuration</a></td>
        <td><span class="parametername">config</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_LoadConfig_" data-uid="FigNet.Core.FN.LoadConfig*"></a>
  <h4 id="FigNet_Core_FN_LoadConfig" data-uid="FigNet.Core.FN.LoadConfig">LoadConfig()</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void LoadConfig()</code></pre>
  </div>
  
  
  <a id="FigNet_Core_FN_LoadModules_" data-uid="FigNet.Core.FN.LoadModules*"></a>
  <h4 id="FigNet_Core_FN_LoadModules_FigNet_Core_IServer_" data-uid="FigNet.Core.FN.LoadModules(FigNet.Core.IServer)">LoadModules(IServer)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void LoadModules(IServer server)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.IServer.html">IServer</a></td>
        <td><span class="parametername">server</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_RemoveConnectionAndDisconnect_" data-uid="FigNet.Core.FN.RemoveConnectionAndDisconnect*"></a>
  <h4 id="FigNet_Core_FN_RemoveConnectionAndDisconnect_System_String_" data-uid="FigNet.Core.FN.RemoveConnectionAndDisconnect(System.String)">RemoveConnectionAndDisconnect(String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void RemoveConnectionAndDisconnect(string name)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">name</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="FigNet_Core_FN_SetFactories_" data-uid="FigNet.Core.FN.SetFactories*"></a>
  <h4 id="FigNet_Core_FN_SetFactories_FigNet_Core_ISocketFactory_FigNet_Core_IPeerFactory_" data-uid="FigNet.Core.FN.SetFactories(FigNet.Core.ISocketFactory,FigNet.Core.IPeerFactory)">SetFactories(ISocketFactory, IPeerFactory)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void SetFactories(ISocketFactory socketFactory, IPeerFactory peerFactory)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="FigNet.Core.ISocketFactory.html">ISocketFactory</a></td>
        <td><span class="parametername">socketFactory</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="FigNet.Core.IPeerFactory.html">IPeerFactory</a></td>
        <td><span class="parametername">peerFactory</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="extensionmethods">Extension Methods</h3>
  <div>
      <a class="xref" href="FigNet.Core.Extensions.html#FigNet_Core_Extensions_SerializeAsXml__1___0_">Extensions.SerializeAsXml&lt;T&gt;(T)</a>
  </div>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
